/// @file
/// @brief Contains main page.

/// @mainpage xtd - Developer's Reference Guide - Internal use only
///
/// <b>xtd (pronounced "extend") is a modern c++17/20 framework to create console, forms (GUI like WinForms) and unit test applications on Windows, macOS, Linux, iOS and android.</b>
///
/// <a href="https://gammasoft71.github.io/xtd"><img src="logo.png"></a>
///
/// @section FeaturesSection Features
///   * Free and open-source (<a href="https://gammasoft71.github.io/xtd/docs/documentation/license">MIT License</a>);
///   * a collection of native C++ classes libraries, to complete std;
///   * API close to the .net API with a modern C++ approach and full integration with the std standard;
///   * xtd is designed to manage GUI controls and dialogs in pure <a href="https://gammasoft71.github.io/xtd/docs/documentation/Guides/xtd.forms/Overview/control_appearance">native mode</a> or with <a href="https://gammasoft71.github.io/xtd/docs/documentation/Guides/xtd.forms/Style%20sheets/style_sheets_overview">CSS styles</a>.
///   * written in efficient, modern <a href="https://en.cppreference.com/w/">C++ 17/20</a> with <a href="https://en.wikipedia.org/wiki/Resource_acquisition_is_initialization">RAII</a> programming idiom;
///   * and <a href="https://gammasoft71.github.io/xtd/docs/documentation/portability">highly</a> portable and available on <a href="https://gammasoft71.github.io/xtd/docs/documentation/portability">many different platforms</a> (Windows, macOS, Linux, iOS and android);
///   * See <a href="https://gammasoft71.github.io/xtd/docs/documentation/features">features</a> for more informations.
///
/// @section xtdLibrariesArchitectureSection xtd libraries architecture
///
/// <a href="https://gammasoft71.github.io/xtd/docs/documentation/Guides/Overview/Libraries/hierarchy"><img src="block_diagram_onion.png"></a>
///
/// xtd is composed of several libraries.
///
/// @subsection coreSubSection xtd.core
/// <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__core.html"><img src="xtd.core.png"></a>
/// The <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__core.html">xtd.core</a> library is modern C++17/20 libraries of classes, interfaces, and value types that provide access to system functionality. It is the foundation on which c++ applications, components, and controls are built.
///
/// @subsection DrawingSubSection xtd.drawing
/// <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__drawing.html"><img src="xtd.drawing.png"></a>
/// The <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__drawing.html">xtd.drawing</a> library contains types that support basic GDI+ graphics functionality. Child namespaces support advanced two-dimensional and vector graphics functionality, advanced imaging functionality, and print-related and typographical services. A child namespace also contains types that extend design-time user-interface logic and drawing.
///
/// @subsection FormsSubSection xtd.forms
/// <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html"><img src="xtd.forms.png"></a>
/// The <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html">xtd.forms</a> library contains classes for creating Windows-based applications that take full advantage of the rich user interface features available in the Microsoft Windows, Apple macOS and linux base operating system.
///
/// @subsection TUinitSubSection xtd.tunit
/// <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__tunit.html"><img src="xtd.tunit.png"></a>
/// The <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__tunit.html">xtd.tunit</a> library is a unit-testing framework for modern C++17/20 inspired by <a href="https://docs.microsoft.com/en-us/visualstudio/test/microsoft-visualstudio-testtools-cppunittestframework-api-reference">Microsoft.VisualStudio.TestTools.Cpp</a>.
///
/// See <a href="https://gammasoft71.github.io/xtd/docs/documentation/Guides/Overview/Libraries/hierarchy">xtd libraries hierarchy</a>.
///
/// @section GettingStartedSection Getting Started
///  * <a href="https://gammasoft71.github.io/xtd/docs/downloads">Installation</a> provides download, install and uninstall documentation.
///  * <a href="https://gammasoft71.github.io/xtd/docs/documentation/Guides">Guide</a> provides xtd guides and tutorials.
///  * <a href="https://github.com/gammasoft71/xtd/blob/master/examples/README.md">Examples</a> provides over 750 examples to help you use xtd, grouped by libraries and topics.
///
/// @section ExamplesSection Examples
/// The classic first application 'Hello World'.
///
/// @subsection ExamplesConsoleSubsection Console
/// hello_world_console.cpp:
/// @code
/// #include <xtd/xtd>
///
/// using namespace xtd;
///
/// auto main()->int {
///   console::background_color(console_color::blue);
///   console::foreground_color(console_color::white);
///   console::write_line("Hello, World!");
/// }
/// @endcode
///
/// CMakeLists.txt:
/// @code
/// cmake_minimum_required(VERSION 3.20)
///
/// project(hello_world_console)
/// find_package(xtd REQUIRED)
/// add_sources(hello_world_console.cpp)
/// target_type(CONSOLE_APPLICATION)
/// @endcode
///
/// @subsubsection ExamplesConsoleBuildAndRunSubsubsection Build and run
/// Open "Command Prompt" or "Terminal". Navigate to the folder that contains the project and type the following:
/// @code
/// xtdc run
/// @endcode
///
/// @subsubsection ExamplesConsoleOutputSubsubsection Output
/// @code
/// Hello, World!
/// @endcode
///
/// @subsection ExamplesFormsSubsection Forms
/// hello_world_forms.cpp:
/// @code
/// #include <xtd/xtd>
/// 
/// using namespace xtd::forms;
/// 
/// class main_form : public form {
/// public:
///   main_form() {
///     text("Hello world (message_box)");
/// 
///     button1.location({10, 10});
///     button1.parent(*this);
///     button1.text("&Click me");
///     button1.click += [] {
///       message_box::show("Hello, World!");
///     };
///   }
///   
/// private:
///   button button1;
/// };
/// 
/// auto main()->int {
///   application::run(main_form());
/// }
/// @endcode
///
/// CMakeLists.txt:
/// @code
/// cmake_minimum_required(VERSION 3.20)
///
/// project(hello_world_forms)
/// find_package(xtd REQUIRED)
/// add_sources(hello_world_forms.cpp)
/// target_type(GUI_APPLICATION)
/// @endcode
///
/// @subsubsection ExamplesFormsBuildAndRunSubsubsection Build and run
/// Open "Command Prompt" or "Terminal". Navigate to the folder that contains the project and type the following:
/// @code
/// xtdc run
/// @endcode
///
/// @subsubsection ExamplesFormsOutputSubsubsection Output
///
/// Windows:
///  @image html hello_world_w.png
/// <br>
///  @image html hello_world_wd.png
///
/// macOS:
///  @image html hello_world_m.png
/// <br>
///  @image html hello_world_md.png
///
/// Linux Gnome:
///  @image html hello_world_g.png
/// <br>
///  @image html hello_world_gd.png
///
/// @subsection ExamplesUnitTestSubsection Unit tests
/// hello_world_test.cpp:
/// @code
/// #include <xtd/xtd>
/// #include <string>
///
/// using namespace std;
/// using namespace xtd::tunit;
///
/// namespace unit_tests {
///   class test_class_(hello_world_test) {
///     void test_method_(create_string_from_literal) {
///       string s = "Hello, World!";
///       assert::are_equal("Hello, World!", s);
///     }
///
///     void test_method_(create_string_from_chars) {
///       string s = {'H', 'e', 'l', 'l', 'o', ',', ' ', 'W', 'o', 'r', 'l', 'd', '!'};
///       valid::are_equal(13, s.size());
///       string_assert::starts_with("Hello,", s);
///       string_assert::ends_with(" World!", s);
///     }
///   };
/// }
///
/// auto main()->int {
///   return console_unit_test(argv, argc).run();
/// }
/// @endcode
///
/// CMakeLists.txt:
/// @code
/// cmake_minimum_required(VERSION 3.20)
///
/// project(hello_world_test)
/// find_package(xtd REQUIRED)
/// add_sources(hello_world_test.cpp)
/// target_type(TEST_APPLICATION)
/// @endcode
///
/// @subsubsection ExamplesUnitTestBuildAndRunSubsubsection Build and run
/// Open "Command Prompt" or "Terminal". Navigate to the folder that contains the project and type the following:
/// @code
/// xtdc run
/// @endcode
///
/// @subsubsection ExamplesUnitTestOutputSubsubsection Output
///
///  @image html hello_world_tunit.png
///
/// @subsection SeeAlsoSubsection See also
///  * <a href="https://gammasoft71.github.io/xtd">website</a>
///  * <a href="https://github.com/gammasoft71/xtd/wiki">wiki</a>
///  * <a href="https://github.com/gammasoft71/xtd">sources</a>
///  * <a href="https://sourceforge.net/projects/xtdpro/">project</a>
///  * <a href="https://gammasoft71.github.io/xtd/reference_guides/latest/">Reference Guide</a>
